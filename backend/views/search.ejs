<%- include('partials/header', { title: 'Search', page: 'search' }) %>

<div class="container my-5">
    <div class="row">
        <div class="col-lg-10 mx-auto">
            <!-- Page Header -->
            <div class="text-center mb-5">
                <h1 class="display-5 fw-bold text-primary">
                    <i class="fas fa-search me-3"></i>
                    Search & Map Codes
                </h1>
                <p class="lead text-muted">
                    Find NAMASTE traditional medicine codes and discover their ICD-11 mappings
                </p>
            </div>

            <!-- Search Interface -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-magnifying-glass me-2"></i>
                        Search NAMASTE Codes
                    </h4>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-8">
                            <label for="searchInput" class="form-label">Search Term</label>
                            <input 
                                type="text" 
                                class="form-control form-control-lg" 
                                id="searchInput" 
                                placeholder="Type to search (e.g., 'Jwara', 'fever', 'cough')..."
                                autocomplete="off"
                            >
                            <!-- Autocomplete dropdown -->
                            <div id="autocompleteResults" class="dropdown-menu w-100" style="display: none;"></div>
                        </div>
                        <div class="col-md-4">
                            <label for="searchType" class="form-label">Search In</label>
                            <select class="form-select form-select-lg" id="searchType">
                                <option value="namaste">NAMASTE Codes</option>
                                <option value="icd11">ICD-11 Codes</option>
                            </select>
                        </div>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-primary btn-lg" onclick="performSearch()">
                            <i class="fas fa-search me-2"></i>
                            Search
                        </button>
                        <button class="btn btn-outline-secondary btn-lg" onclick="clearResults()">
                            <i class="fas fa-eraser me-2"></i>
                            Clear
                        </button>
                    </div>
                </div>
            </div>

            <!-- Search Results -->
            <div id="searchResults" style="display: none;">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-success text-white">
                        <h4 class="mb-0">
                            <i class="fas fa-list me-2"></i>
                            Search Results
                        </h4>
                    </div>
                    <div class="card-body" id="searchResultsBody">
                        <!-- Results will be populated here -->
                    </div>
                </div>
            </div>

            <!-- Selected Code Details -->
            <div id="codeDetails" style="display: none;">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-info text-white">
                        <h4 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>
                            Code Details & Mapping
                        </h4>
                    </div>
                    <div class="card-body" id="codeDetailsBody">
                        <!-- Details will be populated here -->
                    </div>
                </div>
            </div>

            <!-- ML Suggestions -->
            <div id="mlSuggestions" style="display: none;">
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h4 class="mb-0">
                            <i class="fas fa-robot me-2"></i>
                            ML-Powered Suggestions
                        </h4>
                    </div>
                    <div class="card-body" id="mlSuggestionsBody">
                        <!-- ML suggestions will be populated here -->
                    </div>
                </div>
            </div>

            <!-- FHIR Generation -->
            <div id="fhirSection" style="display: none;">
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-dark text-white">
                        <h4 class="mb-0">
                            <i class="fas fa-file-medical me-2"></i>
                            Generate FHIR Condition
                        </h4>
                    </div>
                    <div class="card-body">
                        <form id="fhirForm">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label for="patientId" class="form-label">Patient ID</label>
                                    <input type="text" class="form-control" id="patientId" placeholder="P001" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="clinician" class="form-label">Clinician</label>
                                    <input type="text" class="form-control" id="clinician" placeholder="Dr. Smith" required>
                                </div>
                            </div>
                            <input type="hidden" id="selectedNamasteCode">
                            <div class="mt-3">
                                <button type="submit" class="btn btn-dark btn-lg">
                                    <i class="fas fa-plus me-2"></i>
                                    Generate FHIR Condition
                                </button>
                            </div>
                        </form>
                        <div id="fhirResult" style="display: none;" class="mt-4">
                            <h6>Generated FHIR Condition:</h6>
                            <pre class="bg-light p-3 rounded" id="fhirJson"></pre>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let searchTimeout;
let currentSearch = '';

// Setup autocomplete
document.getElementById('searchInput').addEventListener('input', function() {
    const query = this.value.trim();
    const type = document.getElementById('searchType').value;
    
    clearTimeout(searchTimeout);
    
    if (query.length < 2) {
        hideAutocomplete();
        return;
    }
    
    searchTimeout = setTimeout(() => {
        fetchAutocomplete(query, type);
    }, 300);
});

// Hide autocomplete when clicking outside
document.addEventListener('click', function(e) {
    if (!e.target.closest('#searchInput') && !e.target.closest('#autocompleteResults')) {
        hideAutocomplete();
    }
});

async function fetchAutocomplete(query, type) {
    try {
        const response = await fetch(`/api/autocomplete?q=${encodeURIComponent(query)}&type=${type}&limit=5`);
        const data = await response.json();
        
        displayAutocomplete(data.suggestions);
    } catch (error) {
        console.error('Autocomplete error:', error);
    }
}

function displayAutocomplete(suggestions) {
    const resultsDiv = document.getElementById('autocompleteResults');
    const searchType = document.getElementById('searchType').value;
    
    if (suggestions.length === 0) {
        hideAutocomplete();
        return;
    }
    
    let html = '';
    suggestions.forEach(item => {
        if (searchType === 'namaste') {
            html += `
                <div class="dropdown-item cursor-pointer" onclick="selectSuggestion('${item.NAMASTE_Code}', '${item.Traditional_Term}', '${item.English_Translation}')">
                    <div class="fw-bold">${item.Traditional_Term}</div>
                    <div class="text-muted small">${item.English_Translation} (${item.NAMASTE_Code})</div>
                </div>
            `;
        } else {
            html += `
                <div class="dropdown-item cursor-pointer" onclick="selectIcdSuggestion('${item.ICD11_Code}', '${item.Title}')">
                    <div class="fw-bold">${item.ICD11_Code}</div>
                    <div class="text-muted small">${item.Title}</div>
                </div>
            `;
        }
    });
    
    resultsDiv.innerHTML = html;
    resultsDiv.style.display = 'block';
}

function hideAutocomplete() {
    document.getElementById('autocompleteResults').style.display = 'none';
}

function selectSuggestion(code, term, translation) {
    document.getElementById('searchInput').value = term;
    hideAutocomplete();
    loadCodeDetails(code);
}

function selectIcdSuggestion(code, title) {
    document.getElementById('searchInput').value = title;
    hideAutocomplete();
    // Could implement ICD details view here
}

async function performSearch() {
    const query = document.getElementById('searchInput').value.trim();
    const type = document.getElementById('searchType').value;
    
    if (!query) {
        alert('Please enter a search term');
        return;
    }
    
    try {
        const response = await fetch(`/api/search?q=${encodeURIComponent(query)}&type=${type}`);
        const data = await response.json();
        
        displaySearchResults(data);
    } catch (error) {
        console.error('Search error:', error);
        alert('Search failed. Please try again.');
    }
}

function displaySearchResults(data) {
    const resultsDiv = document.getElementById('searchResults');
    const bodyDiv = document.getElementById('searchResultsBody');
    
    if (data.results.length === 0) {
        bodyDiv.innerHTML = `
            <div class="text-center text-muted py-4">
                <i class="fas fa-search fa-3x mb-3"></i>
                <p>No results found for "${data.query}"</p>
            </div>
        `;
    } else {
        let html = `<p class="text-muted mb-3">Found ${data.results.length} results for "<strong>${data.query}</strong>"</p>`;
        
        data.results.forEach(result => {
            const item = result.item;
            const score = (result.score * 100).toFixed(1);
            
            if (data.type === 'namaste') {
                html += `
                    <div class="card mb-3 result-card" onclick="loadCodeDetails('${item.NAMASTE_Code}')">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="card-title text-primary">${item.Traditional_Term}</h6>
                                    <p class="card-text">${item.English_Translation}</p>
                                    <small class="text-muted">
                                        <i class="fas fa-tag me-1"></i>${item.NAMASTE_Code} • 
                                        <i class="fas fa-leaf me-1"></i>${item.Medical_System} • 
                                        <i class="fas fa-folder me-1"></i>${item.Category}
                                    </small>
                                </div>
                                <span class="badge bg-success">${score}% match</span>
                            </div>
                        </div>
                    </div>
                `;
            } else {
                html += `
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="card-title text-info">${item.ICD11_Code}</h6>
                                    <p class="card-text">${item.Title}</p>
                                    <small class="text-muted">
                                        <i class="fas fa-layer-group me-1"></i>${item.Module} • 
                                        <i class="fas fa-folder me-1"></i>${item.Category}
                                    </small>
                                </div>
                                <span class="badge bg-success">${score}% match</span>
                            </div>
                        </div>
                    </div>
                `;
            }
        });
        
        bodyDiv.innerHTML = html;
    }
    
    resultsDiv.style.display = 'block';
}

async function loadCodeDetails(namasteCode) {
    try {
        const response = await fetch(`/api/map/${namasteCode}`);
        const data = await response.json();
        
        displayCodeDetails(data);
        
        // If no mapping exists, fetch ML suggestions
        if (!data.mapping) {
            fetchMLSuggestions(data.namasteEntry.English_Translation);
        }
        
    } catch (error) {
        console.error('Error loading code details:', error);
    }
}

function displayCodeDetails(data) {
    const detailsDiv = document.getElementById('codeDetails');
    const bodyDiv = document.getElementById('codeDetailsBody');
    
    let html = `
        <div class="row">
            <div class="col-md-6">
                <h5 class="text-primary">
                    <i class="fas fa-leaf me-2"></i>
                    NAMASTE Code
                </h5>
                <div class="card bg-light">
                    <div class="card-body">
                        <h6 class="fw-bold">${data.namasteEntry.Traditional_Term}</h6>
                        <p class="mb-2">${data.namasteEntry.English_Translation}</p>
                        <small class="text-muted">
                            <strong>Code:</strong> ${data.namasteEntry.NAMASTE_Code}<br>
                            <strong>System:</strong> ${data.namasteEntry.Medical_System}<br>
                            <strong>Category:</strong> ${data.namasteEntry.Category}
                        </small>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h5 class="text-info">
                    <i class="fas fa-hospital me-2"></i>
                    ICD-11 Mapping
                </h5>
    `;
    
    if (data.mapping) {
        html += `
            <div class="card bg-light">
                <div class="card-body">
                    <div class="mb-3">
                        <span class="badge bg-success mb-2">
                            ${data.mapping.Mapping_Type} Mapping (${(data.mapping.Confidence_Score * 100).toFixed(1)}% confidence)
                        </span>
                    </div>
        `;
        
        if (data.icd11Entries.traditional) {
            html += `
                <div class="mb-2">
                    <strong>Traditional Medicine:</strong><br>
                    <code>${data.icd11Entries.traditional.ICD11_Code}</code> - ${data.icd11Entries.traditional.Title}
                </div>
            `;
        }
        
        if (data.icd11Entries.biomedicine) {
            html += `
                <div>
                    <strong>Biomedicine:</strong><br>
                    <code>${data.icd11Entries.biomedicine.ICD11_Code}</code> - ${data.icd11Entries.biomedicine.Title}
                </div>
            `;
        }
        
        html += `
                </div>
            </div>
        `;
    } else {
        html += `
            <div class="card bg-warning bg-opacity-25 border-warning">
                <div class="card-body text-center">
                    <i class="fas fa-exclamation-triangle text-warning fa-2x mb-2"></i>
                    <p class="mb-0">No existing mapping found</p>
                    <small class="text-muted">ML suggestions will be loaded below</small>
                </div>
            </div>
        `;
    }
    
    html += `
            </div>
        </div>
    `;
    
    bodyDiv.innerHTML = html;
    detailsDiv.style.display = 'block';
    
    // Show FHIR section
    document.getElementById('selectedNamasteCode').value = data.namasteCode;
    document.getElementById('fhirSection').style.display = 'block';
}

async function fetchMLSuggestions(term) {
    try {
        const response = await fetch(`/api/ml/suggest?term=${encodeURIComponent(term)}`);
        const data = await response.json();
        
        displayMLSuggestions(data);
    } catch (error) {
        console.error('ML suggestions error:', error);
        displayMLError();
    }
}

function displayMLSuggestions(data) {
    const suggestionsDiv = document.getElementById('mlSuggestions');
    const bodyDiv = document.getElementById('mlSuggestionsBody');
    
    if (data.suggestions.length === 0) {
        bodyDiv.innerHTML = `
            <div class="text-center text-muted py-3">
                <i class="fas fa-robot fa-2x mb-2"></i>
                <p>No ML suggestions available</p>
            </div>
        `;
    } else {
        let html = `
            <p class="text-muted mb-3">
                <i class="fas fa-info-circle me-1"></i>
                ML-powered suggestions for "<strong>${data.term}</strong>" (Source: ${data.source})
            </p>
        `;
        
        data.suggestions.forEach((suggestion, index) => {
            const confidence = (suggestion.score * 100).toFixed(1);
            const badgeClass = suggestion.score > 0.7 ? 'bg-success' : suggestion.score > 0.5 ? 'bg-warning' : 'bg-secondary';
            
            html += `
                <div class="card mb-2">
                    <div class="card-body py-2">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <strong class="text-info">${suggestion.icd_code}</strong>
                                <span class="ms-2">${suggestion.title}</span>
                            </div>
                            <span class="badge ${badgeClass}">${confidence}%</span>
                        </div>
                    </div>
                </div>
            `;
        });
        
        if (data.note) {
            html += `<small class="text-muted"><i class="fas fa-info-circle me-1"></i>${data.note}</small>`;
        }
        
        bodyDiv.innerHTML = html;
    }
    
    suggestionsDiv.style.display = 'block';
}

function displayMLError() {
    const suggestionsDiv = document.getElementById('mlSuggestions');
    const bodyDiv = document.getElementById('mlSuggestionsBody');
    
    bodyDiv.innerHTML = `
        <div class="alert alert-warning" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>ML Service Unavailable</strong><br>
            The machine learning service is currently not responding. Please ensure the Python ML service is running on port 5001.
        </div>
    `;
    
    suggestionsDiv.style.display = 'block';
}

// FHIR generation
document.getElementById('fhirForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const patientId = document.getElementById('patientId').value;
    const clinician = document.getElementById('clinician').value;
    const namasteCode = document.getElementById('selectedNamasteCode').value;
    
    try {
        const response = await fetch('/api/generate-fhir', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                patientId,
                namasteCode,
                clinician
            })
        });
        
        const data = await response.json();
        
        document.getElementById('fhirJson').textContent = JSON.stringify(data.fhirCondition, null, 2);
        document.getElementById('fhirResult').style.display = 'block';
        
    } catch (error) {
        console.error('FHIR generation error:', error);
        alert('Failed to generate FHIR condition. Please try again.');
    }
});

function clearResults() {
    document.getElementById('searchInput').value = '';
    document.getElementById('searchResults').style.display = 'none';
    document.getElementById('codeDetails').style.display = 'none';
    document.getElementById('mlSuggestions').style.display = 'none';
    document.getElementById('fhirSection').style.display = 'none';
    hideAutocomplete();
}
</script>

<style>
.result-card {
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
}

.result-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.cursor-pointer {
    cursor: pointer;
}

#autocompleteResults {
    position: absolute;
    z-index: 1000;
    max-height: 300px;
    overflow-y: auto;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}
</style>

<%- include('partials/footer') %>